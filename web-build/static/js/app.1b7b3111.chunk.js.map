{"version":3,"sources":["src/assets/background.png","src/assets/logo.png","src/pages/Pages.ts","src/styles/colors.ts","src/components/Button.tsx","src/pages/Welcome.tsx","src/proveiders/UserProvider.tsx","src/pages/UserIdentification.tsx","src/pages/Questions.tsx","src/pages/End.tsx","src/pages/Certificate.tsx","App.tsx","src/assets/correctAnswer.mp3","src/assets/wrongAnswer.mp3","src/assets/trueAnswer.png","src/assets/falseAnswer.png","src/assets/question1.jpg","src/assets/question2.jpg","src/assets/question3.jpg","src/assets/question4.jpg","src/assets/question5.jpg","src/assets/question6.jpg","src/assets/question7.jpg","src/assets/question8.jpg","src/assets/certificate.png"],"names":["module","exports","Pages","Button","title","rest","TouchableOpacity","style","styles","container","activeOpacity","Text","text","StyleSheet","create","backgroundColor","colors","height","borderRadius","justifyContent","alignItems","fontSize","color","background","require","Welcome","navigation","useNavigation","View","ImageBackground","source","image","footer","onPress","navigate","UserIdentification","flex","resizeMode","paddingHorizontal","paddingBottom","UserContextData","createContext","UserProvider","children","useState","name","setName","score","setScore","Provider","value","saveName","updateScore","useUser","useContext","logo","isFocused","setIsFocused","isFilled","setIsFilled","content","Image","form","header","emoji","TextInput","placeholder","input","borderColor","onBlur","onFocus","onChangeText","a","async","Alert","alert","Questions","width","alignSelf","Dimensions","get","borderBottomWidth","marginTop","padding","textAlign","lineHeight","soundCorrectAnswer","soundWrongAnswer","trueAnswer","falseAnswer","question1","question2","question3","question4","question5","question6","question7","question8","currentQuestion","setCurrentQuestion","imageCurrentQuestion","setImageCurrentQuestion","sound","setSound","imagesQuestions","answers","useFocusEffect","useCallback","useEffect","unloadAsync","undefined","submitAnswer","answer","Audio","Sound","createAsync","playAsync","newScore","newCurrentQuestion","End","imageQuestion","containerScore","scoreText","answersGroup","imageAnswer","paddingVertical","borderBottomLeftRadius","borderTopRightRadius","fontWeight","flexDirection","marginHorizontal","contentWin","imageLogo","subtitle","Certificate","imageBackground","contentLost","margin","marginVertical","messageText","messageCongratulations","line","Stack","createStackNavigator","defaultScreenOptions","headerStyle","headerTintColor","headerTitleStyle","headerBackTitleStyle","headerRightContainerStyle","App","NavigationContainer","StatusBar","barStyle","Navigator","screenOptions","Screen","component","options","headerShown"],"mappings":"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","file":"static/js/app.1b7b3111.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.b53a3b77.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.188ba32c.png\";","export enum Pages {\r\n  Welcome = 'Welcome',\r\n  UserIdentification = 'UserIdentification',\r\n  Questions = 'Questions',\r\n  End = 'End',\r\n  Certificate = 'Certificate'\r\n}\r\n","export default {\r\n  green: '#32B768',\r\n  green_dark: '#2B7A4B',\r\n  green_light: '#DAF2E4',\r\n\r\n  heading: '#52665A',\r\n  body_dark: '#738078',\r\n  body_light: '#AAB2AD',\r\n\r\n  background: '#FFFFFF',\r\n  shape: '#F0F0F0',\r\n  white: '#FFFFFF',\r\n  gray: '#CFCFCF',\r\n\r\n  blue: '#3D7199',\r\n  blue_light: '#5CE1E6',\r\n  blue_light_2: '#1C7EEB',\r\n\r\n  red: '#E83F5B',\r\n  black: '#292727'\r\n};\r\n","import React from 'react';\r\nimport colors from '../styles/colors';\r\nimport { StyleSheet, Text, TouchableOpacity, TouchableOpacityProps } from 'react-native';\r\n\r\ninterface ButtonProps extends TouchableOpacityProps {\r\n  title: string;\r\n}\r\n\r\nexport function Button({ title, ...rest }: ButtonProps) {\r\n  return (\r\n    <TouchableOpacity style={styles.container} {...rest} activeOpacity={0.7}>\r\n      <Text style={styles.text}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.blue_light,\r\n    height: 56,\r\n    borderRadius: 16,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  text: {\r\n    fontSize: 25,\r\n    color: colors.white\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { ImageBackground, StyleSheet, View } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Pages } from './Pages';\r\nimport { Button } from '../components/Button';\r\n\r\nconst background = require('../assets/background.png');\r\n\r\nexport function Welcome() {\r\n  const navigation = useNavigation();\r\n\r\n  const handleStart = () => {\r\n    navigation.navigate(Pages.UserIdentification);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={background} style={styles.image}>\r\n        <View style={styles.footer}>\r\n          <Button title=\"Começar\" onPress={handleStart} />\r\n        </View>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    resizeMode: 'cover',\r\n    justifyContent: 'flex-end'\r\n  },\r\n  footer: {\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 50\r\n  }\r\n});\r\n","import React, { createContext, useContext, useState } from 'react';\r\n\r\ninterface UserContextData {\r\n  name: string;\r\n  score: number;\r\n  saveName: (name: string) => void;\r\n  updateScore: (score: number) => void;\r\n}\r\n\r\nconst UserContextData = createContext<UserContextData>({} as UserContextData);\r\n\r\nexport const UserProvider: React.FC = ({ children }: any) => {\r\n  const [name, setName] = useState<string>({} as string);\r\n  const [score, setScore] = useState<number>({} as number);\r\n\r\n  const saveName = (name: string) => {\r\n    return setName(name);\r\n  };\r\n\r\n  const updateScore = (score: number) => {\r\n    return setScore(score);\r\n  };\r\n\r\n  return <UserContextData.Provider value={{ name, saveName, score, updateScore }}>{children}</UserContextData.Provider>;\r\n};\r\n\r\nexport function useUser(): UserContextData {\r\n  const context = useContext(UserContextData);\r\n  return context;\r\n}\r\n","import React, { useState } from 'react';\r\nimport colors from '../styles/colors';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport {\r\n  Alert,\r\n  Dimensions,\r\n  Image,\r\n  Keyboard,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableWithoutFeedback,\r\n  View\r\n} from 'react-native';\r\nimport { Button } from '../components/Button';\r\nimport { useUser } from '../proveiders/UserProvider';\r\nimport { Pages } from './Pages';\r\n\r\nconst logo = require('../assets/logo.png');\r\n\r\nexport function UserIdentification() {\r\n  const navigation = useNavigation();\r\n  const { saveName } = useUser();\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isFilled, setIsFilled] = useState(false);\r\n  const [name, setName] = useState<string>();\r\n\r\n  function handleInputBlur() {\r\n    setIsFocused(false);\r\n    setIsFilled(!!name);\r\n  }\r\n\r\n  function handleInputFocus() {\r\n    setIsFocused(true);\r\n  }\r\n\r\n  function handleInputChenge(value: string) {\r\n    setIsFocused(!!value);\r\n    setName(value);\r\n  }\r\n\r\n  async function handleSubmite() {\r\n    if (!name) {\r\n      return Alert.alert('Me diz como chamar você 😥');\r\n    } else {\r\n      saveName(name);\r\n      navigation.navigate(Pages.Questions);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.content}>\r\n        <Image source={logo} style={styles.image} />\r\n        <View style={styles.form}>\r\n          <View style={styles.header}>\r\n            <Text style={styles.emoji}>{isFilled ? '😁' : '😀'}</Text>\r\n            <Text style={styles.title}>Como podemos {'\\n'} chamar você?</Text>\r\n          </View>\r\n          <TextInput\r\n            placeholder=\"Digite um nome\"\r\n            style={[styles.input, (isFocused || isFilled) && { borderColor: colors.blue_light }]}\r\n            onBlur={handleInputBlur}\r\n            onFocus={handleInputFocus}\r\n            onChangeText={handleInputChenge}\r\n          />\r\n          <View style={styles.footer}>\r\n            <Button title=\"Confirmar\" onPress={handleSubmite} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    width: '100%'\r\n  },\r\n  image: {\r\n    alignSelf: 'center',\r\n    height: Dimensions.get('window').width * 0.4,\r\n    resizeMode: 'contain'\r\n  },\r\n  form: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 54,\r\n    alignItems: 'center'\r\n  },\r\n  header: {\r\n    alignItems: 'center'\r\n  },\r\n  emoji: {\r\n    fontSize: 44\r\n  },\r\n  input: {\r\n    borderBottomWidth: 1,\r\n    borderColor: colors.gray,\r\n    color: colors.heading,\r\n    width: '100%',\r\n    fontSize: 18,\r\n    marginTop: 50,\r\n    padding: 10,\r\n    textAlign: 'center'\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: 'center',\r\n    color: colors.heading,\r\n    lineHeight: 32\r\n  },\r\n  footer: {\r\n    marginTop: 40,\r\n    width: '100%',\r\n    paddingHorizontal: 20\r\n  }\r\n});\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Alert, Dimensions, Image, ImageBackground, StyleSheet, Text, View } from 'react-native';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { ImageSourcePropType } from '../../node_modules/@types/react-native/index';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { Pages } from './Pages';\r\nimport { useUser } from '../proveiders/UserProvider';\r\nimport { Audio } from 'expo-av';\r\nimport colors from '../styles/colors';\r\nimport { Sound } from 'expo-av/build/Audio';\r\n\r\nconst soundCorrectAnswer = require('../assets/correctAnswer.mp3');\r\nconst soundWrongAnswer = require('../assets/wrongAnswer.mp3');\r\n\r\nconst trueAnswer = require('../assets/trueAnswer.png');\r\nconst falseAnswer = require('../assets/falseAnswer.png');\r\nconst question1 = require('../assets/question1.jpg');\r\nconst question2 = require('../assets/question2.jpg');\r\nconst question3 = require('../assets/question3.jpg');\r\nconst question4 = require('../assets/question4.jpg');\r\nconst question5 = require('../assets/question5.jpg');\r\nconst question6 = require('../assets/question6.jpg');\r\nconst question7 = require('../assets/question7.jpg');\r\nconst question8 = require('../assets/question8.jpg');\r\n\r\nexport function Questions() {\r\n  const navigation = useNavigation();\r\n  const { updateScore } = useUser();\r\n  const [score, setScore] = useState<number>(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState<number>(1);\r\n  const [imageCurrentQuestion, setImageCurrentQuestion] = useState<ImageSourcePropType>(question1);\r\n  const [sound, setSound] = useState<Sound>();\r\n\r\n  const imagesQuestions: any = {\r\n    [1]: question1,\r\n    [2]: question2,\r\n    [3]: question3,\r\n    [4]: question4,\r\n    [5]: question5,\r\n    [6]: question6,\r\n    [7]: question7,\r\n    [8]: question8\r\n  };\r\n\r\n  const answers: any = {\r\n    [1]: true,\r\n    [2]: true,\r\n    [3]: true,\r\n    [4]: false,\r\n    [5]: true,\r\n    [6]: true,\r\n    [7]: false,\r\n    [8]: false\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      setScore(0);\r\n      setCurrentQuestion(1);\r\n      setImageCurrentQuestion(question1);\r\n    }, [])\r\n  );\r\n\r\n  useEffect(() => {\r\n    return sound\r\n      ? () => {\r\n          sound.unloadAsync();\r\n        }\r\n      : undefined;\r\n  }, [sound]);\r\n\r\n  const submitAnswer = async (answer: boolean) => {\r\n    const correctAnswer = answers[currentQuestion];\r\n\r\n    if (answer === correctAnswer) {\r\n      const { sound } = await Audio.Sound.createAsync(soundCorrectAnswer);\r\n      setSound(sound);\r\n      await sound.playAsync();\r\n\r\n      Alert.alert('Parabéns, você acertou! 😀');\r\n      const newScore = score + 1;\r\n      setScore(newScore);\r\n      updateScore(newScore);\r\n    } else {\r\n      const { sound } = await Audio.Sound.createAsync(soundWrongAnswer);\r\n      setSound(sound);\r\n      await sound.playAsync();\r\n\r\n      Alert.alert('Que pena, você errou! 😥');\r\n    }\r\n\r\n    const newCurrentQuestion = currentQuestion + 1;\r\n    setCurrentQuestion(newCurrentQuestion);\r\n\r\n    const newImageCurrentQuestion = imagesQuestions[newCurrentQuestion];\r\n    setImageCurrentQuestion(newImageCurrentQuestion);\r\n\r\n    if (newCurrentQuestion === 9) {\r\n      navigation.navigate(Pages.End);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={imageCurrentQuestion} style={styles.imageQuestion}>\r\n        <View style={styles.content}>\r\n          <View style={styles.containerScore}>\r\n            <Text style={styles.score}>{score}</Text>\r\n            <Text style={styles.scoreText}>Pontos</Text>\r\n          </View>\r\n          <View style={styles.answersGroup}>\r\n            <TouchableOpacity style={styles.answer} onPress={() => submitAnswer(true)}>\r\n              <Image source={trueAnswer} style={styles.imageAnswer} />\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.answer} onPress={() => submitAnswer(false)}>\r\n              <Image source={falseAnswer} style={styles.imageAnswer} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around'\r\n  },\r\n\r\n  containerScore: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 40,\r\n    paddingVertical: 5,\r\n    borderBottomLeftRadius: 20,\r\n    borderTopRightRadius: 20,\r\n    backgroundColor: colors.blue_light\r\n  },\r\n  score: {\r\n    fontSize: 45,\r\n    color: colors.white,\r\n    fontWeight: 'bold'\r\n  },\r\n  scoreText: {\r\n    fontSize: 20,\r\n    color: colors.white,\r\n    fontWeight: 'bold'\r\n  },\r\n  imageAnswer: {\r\n    resizeMode: 'contain',\r\n    height: Dimensions.get('window').width * 0.35,\r\n    width: Dimensions.get('window').width * 0.35\r\n  },\r\n  imageQuestion: {\r\n    flex: 1,\r\n    resizeMode: 'cover',\r\n    justifyContent: 'center'\r\n  },\r\n  answersGroup: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around'\r\n  },\r\n  answer: {\r\n    alignItems: 'center',\r\n    marginHorizontal: 20\r\n  }\r\n});\r\n","import { useNavigation } from '@react-navigation/core';\r\nimport React from 'react';\r\nimport { Dimensions, Image, ImageBackground, StyleSheet, Text, View } from 'react-native';\r\nimport { Button } from '../components/Button';\r\nimport { useUser } from '../proveiders/UserProvider';\r\nimport { Pages } from './Pages';\r\nimport colors from '../styles/colors';\r\n\r\nconst background = require('../assets/background.png');\r\nconst logo = require('../assets/logo.png');\r\n\r\nexport function End() {\r\n  const navigation = useNavigation();\r\n  const { name, score } = useUser();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {score >= 6 ? (\r\n        <View style={styles.contentWin}>\r\n          <Image source={logo} style={styles.imageLogo} />\r\n          <Text style={styles.title}>Parabéns, {name}! 😀</Text>\r\n          <Text style={styles.subtitle}>\r\n            Você chegou ao fim do jogo e pelo seu bom desempenho, ganhou um certificado!\r\n          </Text>\r\n          <View style={styles.footer}>\r\n            <Button title=\"Ver certificado\" onPress={() => navigation.navigate(Pages.Certificate)} />\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        <ImageBackground source={background} style={styles.imageBackground}>\r\n          <View style={styles.contentLost}>\r\n            <Text style={styles.title}>{name}, você chegou ao fim do jogo!</Text>\r\n            <Text style={styles.subtitle}>\r\n              Seu desempenho não foi muito bom 😥, então você pode jogar novamente para aprender mais sobre limpeza!\r\n            </Text>\r\n            <View style={styles.footer}>\r\n              <Button title=\"Jogar novamente\" onPress={() => navigation.navigate(Pages.Questions)} />\r\n            </View>\r\n          </View>\r\n        </ImageBackground>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  contentWin: {\r\n    flex: 1,\r\n    justifyContent: 'space-around'\r\n    // alignItems: 'center',\r\n    // padding: 20\r\n  },\r\n  contentLost: {\r\n    backgroundColor: colors.white,\r\n    borderRadius: 20,\r\n    margin: 20,\r\n    padding: 10\r\n  },\r\n  imageBackground: {\r\n    flex: 1,\r\n    resizeMode: 'cover',\r\n    justifyContent: 'flex-end'\r\n  },\r\n  imageLogo: {\r\n    resizeMode: 'contain',\r\n    height: Dimensions.get('window').width * 0.4\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    textAlign: 'center',\r\n    marginVertical: 10\r\n  },\r\n  subtitle: {\r\n    fontSize: 20,\r\n    textAlign: 'center'\r\n  },\r\n  footer: {\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 20,\r\n    width: '100%'\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { Dimensions, ImageBackground, StyleSheet, Text, View } from 'react-native';\r\nimport { useUser } from '../proveiders/UserProvider';\r\nimport colors from '../styles/colors';\r\n\r\nconst background = require('../assets/certificate.png');\r\n\r\nexport function Certificate() {\r\n  const { name } = useUser();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={background} style={styles.image}>\r\n        <View style={styles.content}>\r\n          <Text style={styles.messageText}>\r\n            Este certificado foi feito para <Text style={[styles.messageText, { fontWeight: 'bold' }]}>{name},</Text>{' '}\r\n            {'\\n'} que aprendeu direitinho como será realizada a higienização necessária para sua proteção!\r\n          </Text>\r\n          <Text style={styles.messageCongratulations}>Parabéns!</Text>\r\n        </View>\r\n        <View style={styles.line} />\r\n        <Text style={styles.messageText}>Assinatura do responsável</Text>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: colors.white\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginVertical: 30\r\n  },\r\n  image: {\r\n    resizeMode: 'cover',\r\n    alignItems: 'center',\r\n    width: Dimensions.get('window').width,\r\n    height: Dimensions.get('window').width * 0.65,\r\n    paddingVertical: 70,\r\n    paddingHorizontal: 50\r\n  },\r\n  messageText: {\r\n    fontSize: 12,\r\n    textAlign: 'center'\r\n  },\r\n  messageCongratulations: {\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    paddingVertical: 10\r\n  },\r\n  line: {\r\n    width: '60%',\r\n    height: 1,\r\n    backgroundColor: colors.black,\r\n    margin: 4\r\n  }\r\n});\r\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { StatusBar } from 'react-native';\nimport { Pages } from './src/pages/Pages';\nimport { Welcome } from './src/pages/Welcome';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { UserIdentification } from './src/pages/UserIdentification';\nimport colors from './src/styles/colors';\nimport { Questions } from './src/pages/Questions';\nimport { UserProvider } from './src/proveiders/UserProvider';\nimport { End } from './src/pages/End';\nimport { Certificate } from './src/pages/Certificate';\n\nconst Stack = createStackNavigator();\n\nconst defaultScreenOptions = () => ({\n  headerStyle: { backgroundColor: colors.blue_light },\n  headerTintColor: colors.white,\n  headerTitleStyle: { color: colors.white },\n  headerBackTitleStyle: { color: colors.white },\n  headerRightContainerStyle: { marginHorizontal: 20 }\n});\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <UserProvider>\n        <StatusBar barStyle=\"light-content\" backgroundColor={colors.blue_light} />\n        <Stack.Navigator screenOptions={defaultScreenOptions}>\n          <Stack.Screen name={Pages.Welcome} component={Welcome} options={{ headerShown: false }} />\n          <Stack.Screen name={Pages.UserIdentification} component={UserIdentification} options={{ headerShown: false }}/>\n          <Stack.Screen name={Pages.Questions} component={Questions} options={{ headerShown: false }} />\n          <Stack.Screen name={Pages.End} component={End} options={{ headerShown: false }} />\n          <Stack.Screen name={Pages.Certificate} component={Certificate} options={{ headerShown: false }} />\n        </Stack.Navigator>\n      </UserProvider>\n    </NavigationContainer>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/correctAnswer.7024795d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrongAnswer.95c205b3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/trueAnswer.22492add.png\";","module.exports = __webpack_public_path__ + \"static/media/falseAnswer.4f9b4557.png\";","module.exports = __webpack_public_path__ + \"static/media/question1.c3d0a143.jpg\";","module.exports = __webpack_public_path__ + \"static/media/question2.109a0d54.jpg\";","module.exports = __webpack_public_path__ + \"static/media/question3.2d454694.jpg\";","module.exports = __webpack_public_path__ + \"static/media/question4.9e643f54.jpg\";","module.exports = __webpack_public_path__ + \"static/media/question5.fac6c957.jpg\";","module.exports = __webpack_public_path__ + \"static/media/question6.ad328e83.jpg\";","module.exports = __webpack_public_path__ + \"static/media/question7.b0269364.jpg\";","module.exports = __webpack_public_path__ + \"static/media/question8.da1d8e96.jpg\";","module.exports = __webpack_public_path__ + \"static/media/certificate.abe07f68.png\";"],"sourceRoot":""}